#summary Overview the how to generate metadata.

<wiki:toc max_depth="2" />

----

= Introduction =

Add your content here.

----

= Demos =

----

== Create a common Unit ==
  * Create a unit object and set and set human readable title, description. 
{{{
Unit unit = new Unit("PRIDE_1234");

# MTD	PRIDE_1234-title	mzTab iTRAQ test
# MTD	PRIDE_1234-description	This is a PRIDE test.
unit.setTitle("mzTab iTRAQ test");
unit.setDescription("This is a PRIDE test.");
}}}
  * A list of parameters describing a sample processing step. The order of the data_processing items should reflect the order these processing steps were performed in. If multiple parameters are given for a step these should be separated by a “|”.
{{{
# MTD	PRIDE_1234-sample_processing[1]	[SEP, SEP:00173, SDS PAGE, ]
# MTD	PRIDE_1234-sample_processing[2]	[SEP, SEP:00142, enzyme digestion, ]|[MS, MS:1001251, Trypsin, ]

unit.addSampleProcessingParam(1, new CVParam("SEP", "SEP:00173", "SDS PAGE", null));
unit.addSampleProcessingParam(2, new CVParam("SEP", "SEP:00142", "enzyme digestion", null));
unit.addSampleProcessingParam(2, new CVParam("MS", "MS:1001251", "Trypsin", null));
}}}

  * The instrument used in the experiment. Multiple instruments are numbered 1..n
{{{
# MTD	PRIDE_1234-instrument[1]-name	[MS, MS:100049, LTQ Orbitrap, ]
# MTD	PRIDE_1234-instrument[1]-analyzer	[MS, MS:1000291, linear ion trap, ]
# MTD	PRIDE_1234-instrument[2]-source	[MS, MS:1000598, ETD, ]
# MTD	PRIDE_1234-instrument[3]-detector	[MS, MS:1000253, electron multiplier, ]
unit.addInstrumentName(1, new CVParam("MS", "MS:100049", "LTQ Orbitrap", null));
unit.addInstrumentSource(2, new CVParam("MS", "MS:1000598", "ETD", null));
unit.addInstrumentAnalyzer(1, new CVParam("MS", "MS:1000291", "linear ion trap", null));
unit.addInstrumentDetector(3, new CVParam("MS", "MS:1000253", "electron multiplier", null));
}}}

  * Software used to analyze the data and obtain the results reported. 
{{{
# MTD	PRIDE_1234-software[1]	[MS, MS:1001207, Mascot, 2.3]
# MTD	PRIDE_1234-software[2]-setting	Fragment tolerance = 0.1Da
# MTD	PRIDE_1234-software[2]-setting	Parent tolerance = 0.5Da
unit.addSoftwareParam(1, new CVParam("MS", "MS:1001207", "Mascot", "2.3"));
unit.addSoftwareSetting(2, "Fragment tolerance = 0.1Da");
unit.addSoftwareSetting(2, "Parent tolerance = 0.5Da");
}}}

  * The unit’s false discovery rate(s) reported at the peptide and/or protein level. Multiple parameters MUST be separated by “|”.
{{{
# MTD	PRIDE_1234-false_discovery_rate	[MS, MS:1234, pep-fdr, 0.5]|[MS, MS:1001364, pep:global FDR, 0.01]|[MS, MS:1001214, pep:global FDR, 0.08]
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1234", "pep-fdr", "0.5"));
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1001364", "pep:global FDR", "0.01"));
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1001214", "pep:global FDR", "0.08"));
}}}

  * A publication on this unit. PubMed ids must be prefixed by “pubmed:”, DOIs by “doi:”. Multiple identifiers MUST be separated by “|”.
{{{
# MTD	PRIDE_1234-publication	pubmed:21063943|doi:10.1007/978-1-60761-987-1_6
# MTD	PRIDE_1234-publication	pubmed:20615486|doi:10.1016/j.jprot.2010.06.008
Publication p1 = new Publication();
p1.addPublication(Publication.Type.PUBMED, "21063943");
p1.addPublication(Publication.Type.DOI, "10.1007/978-1-60761-987-1_6");
Publication p2 = new Publication();
p2.addPublication(Publication.Type.PUBMED, "20615486");
p2.addPublication(Publication.Type.DOI, "10.1016/j.jprot.2010.06.008");
unit.addPublication(p1);
unit.addPublication(p2);
}}}

  * The contact's name, affiliation, and email.
{{{
# MTD	PRIDE_1234-contact[1]-name	James D. Watson
# MTD	PRIDE_1234-contact[1]-affiliation	Cambridge University, UK
# MTD	PRIDE_1234-contact[1]-email	watson@cam.ac.uk
# MTD	PRIDE_1234-contact[2]-affiliation	Cambridge University, UK
# MTD	PRIDE_1234-contact[2]-email	crick@cam.ac.uk
unit.addContactName(1, "James D. Watson");
unit.addContactAffiliation(1, "Cambridge University, UK");
unit.addContactAffiliation(2, "Cambridge University, UK");
unit.addContactEmail(1, "watson@cam.ac.uk");
unit.addContactEmail(2, "crick@cam.ac.uk");
}}}

  * A URI pointing to the unit's source data 
{{{
# MTD	PRIDE_1234-uri	http://www.ebi.ac.uk/pride/url/to/experiment
# MTD	PRIDE_1234-uri	http://proteomecentral.proteomexchange.org/cgi/GetDataset
unit.addUri(new URI("http://www.ebi.ac.uk/pride/url/to/experiment"));
unit.addUri(new URI("http://proteomecentral.proteomexchange.org/cgi/GetDataset"));
}}}

  * A list of “|” separated parameters describing all (distinct) PTMs reported in this unit.
{{{
# MTD	PRIDE_1234-mod	[MOD, MOD:00397, iodoacetamide derivatized residue, ]|[MOD, MOD:00675, oxidized residue, ]
unit.addModParam(new CVParam("MOD", "MOD:00397", "iodoacetamide derivatized residue", null));
unit.addModParam(new CVParam("MOD", "MOD:00675", "oxidized residue", null));
}}}

  * The quantification method used in this unit (most of the times experiment)
{{{
# MTD	PRIDE_1234-quantification_method	[MS, MS:1001837, iTraq, ]
unit.setQuantificationMethod(new CVParam("MS", "MS:1001837", "iTraq", null));
}}}

  * Defines what type of units is reported in the protein/peptide/small molecule quantification fields.
{{{
# MTD	PRIDE_1234-protein-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
# MTD	PRIDE_1234-peptide-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
# MTD	PRIDE_1234-small_molecule-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
unit.setProteinQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
unit.setPeptideQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
unit.setSmallMoleculeQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
}}}

  * The external MS data file.
{{{
# MTD	PRIDE_1234-ms_file[1]-format	[MS, MS:1000584, mzML file, ]
# MTD	PRIDE_1234-ms_file[2]-location	file://C:/path/to/my/file
# MTD	PRIDE_1234-ms_file[2]-id_format	[MS, MS:1000774, multiple peak list, nativeID format]
# MTD	PRIDE_1234-ms_file[3]-location	ftp://ftp.ebi.ac.uk/path/to/file
unit.addMsFileFormat(1, new CVParam("MS", "MS:1000584", "mzML file", null));
unit.addMsFileLocation(2, new URL("file://C:\\path\\to\\my\\file"));
unit.addMsFileLocation(3, new URL("ftp://ftp.ebi.ac.uk/path/to/file"));
unit.addMsFileIdFormat(2, new CVParam("MS", "MS:1000774", "multiple peak list", "nativeID format"));
}}}

  * Defines the used unit of protein/peptide/small_molecule section
{{{
# refer a peptide header retention_time column 
MZTabColumnFactory peptideFactory = MZTabColumnFactory.getInstance(Section.Peptide);
PeptideColumn peptideColumn = (PeptideColumn) peptideFactory.getColumn("retention_time");
# MTD	PRIDE_1234-colunit-peptide	retention_time=[UO, UO:0000031, minute, ]
unit.addPeptideColUnit(peptideColumn, new CVParam("UO", "UO:0000031", "minute", null));

# refer protein header section reliability column directly
# MTD	PRIDE_1234-colunit-protein	reliability=[MS, MS:00001231, PeptideProphet:Score, ]
unit.addProteinColUnit(ProteinColumn.RELIABILITY, new CVParam("MS", "MS:00001231", "PeptideProphet:Score", null));

# refer small molecule header section reliability column directory
# MTD	PRIDE_1234-colunit-small_molecule	retention_time=[UO, UO:0000031, minute, ]
unit.addSmallMoleculeColUnit(SmallMoleculeColumn.RETENTION_TIME, new CVParam("UO", "UO:0000031", "minute", null));
}}}

  * Any additional parameters describing the unit.
{{{
# MTD	PRIDE_1234-custom	[, , MS operator, Florian]
unit.addCustom(new UserParam("MS operator", "Florian"));
}}}

----

== Create subsample Unit ==
  * Subsample specific parameters describing one sample should all contain the same number between the brackets. If there were multiple subsamples analyzed in the respective unit these species should be given using the additional “–{SUB_ID}” part. 
{{{
# MTD	PRIDE_1234-sub[1]-species[1]	[NEWT, 9606, Homo sapien (Human), ]
# MTD	PRIDE_1234-sub[1]-species[2]	[NEWT, 573824, Human rhinovirus 1, ]
# MTD	PRIDE_1234-sub[1]-description	Hepatocellular carcinoma sample.
# MTD	PRIDE_1234-sub[1]-quantification_reagent	[PRIDE, PRIDE:0000114, iTRAQ reagent, 114]
# MTD	PRIDE_1234-sub[1]-custom	[, , Extraction date, 2011-12-21]
# MTD	PRIDE_1234-sub[1]-custom	[, , Extraction reason, liver biopsy]

SubUnit subUnit1 = new SubUnit("PRIDE_1234", 1);
subUnit1.addSpecies(1, new CVParam("NEWT", "9606", "Homo sapien (Human)", null));
subUnit1.addSpecies(2, new CVParam("NEWT", "573824", "Human rhinovirus 1", null));
subUnit1.setDescription("Hepatocellular carcinoma sample.");
subUnit1.setQuantificationReagent(new CVParam("PRIDE", "PRIDE:0000114", "iTRAQ reagent", "114"));
subUnit1.addCustom(new UserParam("Extraction date", "2011-12-21"));
subUnit1.addCustom(new UserParam("Extraction reason", "liver biopsy"));

# MTD	PRIDE_1234-sub[2]-species[1]	[NEWT, 9606, Homo sapien (Human), ]
# MTD	PRIDE_1234-sub[2]-species[2]	[NEWT, 12130, Human rhinovirus 2, ]
# MTD	PRIDE_1234-sub[2]-description	Healthy control samples.
# MTD	PRIDE_1234-sub[2]-quantification_reagent	[PRIDE, PRIDE:0000115, iTRAQ reagent, 115]

SubUnit subUnit2 = new SubUnit("PRIDE_1234", 2);
subUnit2.addSpecies(1, new CVParam("NEWT", "9606", "Homo sapien (Human)", null));
subUnit2.addSpecies(2, new CVParam("NEWT", "12130", "Human rhinovirus 2", null));
subUnit2.setDescription("Healthy control samples.");
subUnit2.setQuantificationReagent(new CVParam("PRIDE", "PRIDE:0000115", "iTRAQ reagent", "115"));
}}} 

  * Experiment where all subsamples (if any) consisted of the same properties
{{{
# MTD	PRIDE_1234-species[1]	[NEWT, 9606, Homo sapien (Human), ]
# MTD	PRIDE_1234-species[2]	[NEWT, 12059, Rhinovirus, ]
# MTD	PRIDE_1234-tissue[1]	[BTO, BTO:0000759, liver, ]
# MTD	PRIDE_1234-cell_type[1]	[CL, CL:0000182, hepatocyte, ]
# MTD	PRIDE_1234-disease[1]	[DOID, DOID:684, hepatocellular carcinoma, ]
# MTD	PRIDE_1234-disease[2]	[DOID, DOID:9451, alcoholic fatty liver, ]
# MTD	PRIDE_1234-description	Hepatocellular carcinoma sample.

SubUnit subUnit = new SubUnit("PRIDE_1234", null);

subUnit.addSpecies(1, new CVParam("NEWT", "9606", "Homo sapien (Human)", null));
subUnit.addSpecies(2, new CVParam("NEWT", "12059", "Rhinovirus", null));
subUnit.addTissue(1, new CVParam("BTO", "BTO:0000759", "liver", null));
subUnit.addCellType(1, new CVParam("CL", "CL:0000182", "hepatocyte", null));
subUnit.addDisease(1, new CVParam("DOID", "DOID:684", "hepatocellular carcinoma", null));
subUnit.addDisease(2, new CVParam("DOID", "DOID:9451", "alcoholic fatty liver", null));
subUnit.setDescription("Hepatocellular carcinoma sample.");
}}}

----

== Create replicate Unit ==
  * When reporting technical replicates, for example for an experiment “EXP_1”, the replicates MUST have the UNIT_IDs “EXP_1-rep[1-n]”. 
{{{
# MTD	EXP_1-rep[1]	Replicate 1 of experiment 1
# MTD	EXP_1-rep[1]-description	Replicate 1 of experiment 1
# MTD	EXP_1-rep[1]-instrument[1]-name	[MS, MS:100049, LTQ Orbitrap, ]
# MTD	EXP_1-rep[1]-instrument[1]-analyzer	[MS, MS:1000291, linear ion trap, ]
# MTD	EXP_1-rep[1]-instrument[2]-source	[MS, MS:1000598, ETD, ]
# MTD	EXP_1-rep[1]-instrument[3]-detector	[MS, MS:1000253, electron multiplier, ]

ReplicateUnit repUnit = new ReplicateUnit("EXP_1", 1);
repUnit.setComment("Replicate 1 of experiment 1");

repUnit.setDescription("Replicate 1 of experiment 1");
repUnit.addInstrumentName(1, new CVParam("MS", "MS:100049", "LTQ Orbitrap", null));
repUnit.addInstrumentSource(2, new CVParam("MS", "MS:1000598", "ETD", null));
repUnit.addInstrumentAnalyzer(1, new CVParam("MS", "MS:1000291", "linear ion trap", null));
repUnit.addInstrumentDetector(3, new CVParam("MS", "MS:1000253", "electron multiplier", null));
}}}