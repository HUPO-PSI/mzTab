#summary List all warn and error messages.

<wiki:toc max_depth="2" />

----
= Introduction =

----
== Format Type ==

|| *    Code*: || 1100 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" not start with [MTD, PRH, PRT, PEH, PEP, SMH, SML, COM] ||
|| *   Cause*: || Every line in an mzTab file MUST start with a three letter code identifying the type of line delimited by a Tab character. The three letter codes are as follows [MTD, PRH, PRT, PEH, PEP, SMH, SML, COM]||

----

|| *    Code*: || 1101 || 
|| *   Level*: || Error ||
|| *Original*: || Data line items count is "{0}", while the header line items count is "{1}". They are not equals. ||
|| *   Cause*: || Data line item count not matched with Header line items. Normally, user not used the Unicode Horizontal Tab character (Unicode codepoint 0009) as the column delimiter, file encoding error, or user provide the optional columns definition in the header line.||

----

|| *    Code*: || 1102 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate Abundance column format.||
|| *   Cause*: || protein abundance, peptide abundance or smallmolecule abundance. For the given subsample (sub[id] SHOULD be defined in the metadata), This information can only be interpreted when identifying the subsample's properties through the experiment id + subsample number in the metadata section of the file. The protein abundance reflects the protein's quantitative information after it was interpreted by the user as, for example when using peptide-based quantification methods like iTRAQ. If a abundance is given for a certain subsample (XXXX_abundance_sub[id]), the corresponding standard deviation column (XXXX_abundance_stdev_sub[id]) and standard error column (XXXX_abundance_std_error_sub[id]) MUST also be present (in case the value is not available "null" should be used). This is an optional columns, and MAY be added to the end of the table.||

----

|| *    Code*: || 1103 ||
|| *   Level*: || Error ||
|| *Original*: || Stable column "{0}" required position is {1}. However, position {2} header name is "{3}". They are not match! ||
|| *   Cause*: || Check the stable columns, including position and header name. All column labels and field names are case-sensitive. The column delimiter is the Unicode Horizontal Tab character.||

----

|| *    Code*: || 1104 ||
|| *   Level*: || Error ||
|| *Original*: || Optional column headers "{0}" format or position error.||
|| *   Cause*: || Optional column headers MUST start with the prefix "opt_". Column names MUST only contain the following characters: 'A'-'Z', 'a'-'z', '0'-'9', '_', '-', '[', ']', and ':'. CV parameter accessions MAY be used for optional columns following the format: opt_cv_{accession}_{parameter name}. Spaces within the parameter's name MUST be replaced by '_'.  This is an optional columns, and MAY be added to the end of the table.||

----

|| *    Code*: || 1105 ||
|| *   Level*: || Error ||
|| *Original*: || Optional CV parameter column headers "{0}" format. ||
|| *   Cause*: || Optional column headers MUST start with the prefix "opt_". Column names MUST only contain the following characters: 'A'-'Z', 'a'-'z', '0'-'9', '_', '-', '[', ']', and ':'. CV parameter accessions MAY be used for optional columns following the format: opt_cv_{accession}_{parameter name}. Spaces within the parameter's name MUST be replaced by '_'.  This is an optional columns, and MAY be added to the end of the table.||

----

|| *    Code*: || 1106 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" should have three parts, which split by Tab char. ||
|| *   Cause*: || MTD line including three parts, which split by Tab char. "MTD	{defineLabel}	{valueLabel}", each part should not be empty.||

----

|| *    Code*: || 1107 ||
|| *   Level*: || Error ||
|| *Original*: || Define label "{0}" should including "{unit}-{element}([{id}])-{property}", which split by "-" char.||
|| *   Cause*: || MTD defineLabel should including "{unit identifier}-{element}([{id}])-{property}", which split by "-" char. The {unit identifier} label including unitId (Unit), unitId_sub[i] (SubUnit, In several experimental approaches biological samples are multiplexed and analyzed in one single experiment), unitID_rep[i] (ReplicateUnit, technical replicates MAY also be reported in a single mzTab file as separate UNITs).  The {element-property} label including: [title, description, sample_processing, instrument-name, instrument-source, instrument-analyzer, instrument-detector, software, software-setting, false_discovery_rate, publication, contact-name, contact-affiliation, contact-email, uri, mod, quantification_method, protein_quantification_unit, peptide_quantification_unit, ms_file-format, ms_file-location, ms_file-id_format, custom, species, tissue, cell_type, disease, quantification_reagent].||

----

|| *    Code*: || 1108 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" value "{1}" is not a validate parameter format. ||
|| *   Cause*: || Parameters are always reported as [CV label, accession, name, value]. Any field that is not available MUST be left empty, except name. mzTab makes use of CV parameters. As mzTab is expected to be used in several experimental environments where parameters might not yet be available for the generated scores etc. all parameters can either report CV parameters or user parameters that only contain a name and a value.||

----

|| *    Code*: || 1109 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" value "{1}" is not a validate parameter list format. ||
|| *   Cause*: || If multiple parameters are given for a step these should be separated by a "|". Parameters are always reported as [CV label, accession, name, value].||

----

|| *    Code*: || 1110 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" value "{1}" is not a validate publication format. ||
|| *   Cause*: || PubMed ids must be prefixed by "pubmed:", DOIs by "doi:". Multiple identifiers MUST be separated by "|". For example: "MTD  PRIDE_1234-publication  pubmed:21063943|doi:10.1007/978-1-60761-987-1_6" ||

----

|| *    Code*: || 1111 ||
|| *   Level*: || Warn ||
|| *Original*: || "{0}" value "{1}" is not a validate URI format. ||
|| *   Cause*: || A URI pointing to the unit's source data, (e.g., a PRIDE experiment or a PeptideAtlas built). For example, "MTD  PRIDE_1234-uri  http://www.ebi.ac.uk/pride/url/to/experiment".||

----

|| *    Code*: || 1112 ||
|| *   Level*: || Warn ||
|| *Original*: || "{0}" value "{1}" is not a validate URL format.||
|| *   Cause*: || Location of the external data file. For example: "file://C:\path\to\my\file" or "ftp://ftp.ebi.ac.uk/path/to/file" ||

----

|| *    Code*: || 1113 ||
|| *   Level*: || Warn ||
|| *Original*: || Column "{0}" value "{1}" is not a validate email format. ||
|| *   Cause*: || A email like userName@serverName ||

----

|| *    Code*: || 1114 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate Integer format.||
|| *   Cause*: || This is not Integer. Thousand separators MUST NOT be used in mzTab files. If ratios are included and the denominator is zero, the "INF" value MUST be used. If the result leads to calculation errors (for example 0/0), this MUST be reported as "not a number" ("NaN").||

----

|| *    Code*: || 1115 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate Double format. ||
|| *   Cause*: || In mzTab files the dot (".") MUST be used as decimal separator. Thousand separators MUST NOT be used in mzTab files. If ratios are included and the denominator is zero, the "INF" value MUST be used. If the result leads to calculation errors (for example 0/0), this MUST be reported as "not a number" ("NaN").||

----

|| *    Code*: || 1116 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate Reliability format, or the value should be 1..3  ||
|| *   Cause*: || The reliability of the given protein identification. This must be supplied by the resource and has to be one of the following values:  1: high reliability; 2: medium reliability; 3: poor reliability ||

----

|| *    Code*: || 1117 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not valid string list format, the split char is "{1}" ||
|| *   Cause*: || If multiple String using a split char. ||

----

|| *    Code*: || 1118 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate double list format, the split char is "{1}"||
|| *   Cause*: || If multiple Double using a split char.||

----

|| *    Code*: || 1119
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate modification list. ||
|| *   Cause*: || A comma delimited list of modifications found in the given protein/peptide/small molecule. Modifications or substitutions are modelled using a specific modification object with the following format: {position}{Parameter}-{Modification or Substitution identifier}|{neutral loss}. {position} is optional depending on the section where the modification is reported. {Parameter} is optional. It MAY be used to report a quantity e.g. a probability score associated with the modification or location. {neutral loss} is optional. Neutral losses are reported as cvParams. Neutral losses MAY be associated with certain modifications. In this case the neutral loss is reported after the modification object separated by the '|' character. Otherwise, they are reported in the same way that modification objects are (as separate, comma-separated objects in the modification column).||

----

|| *    Code*: || 1120 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate GOTerms list. ||
|| *   Cause*: || A '|'-delimited list of GO accessions for this protein. Each GO accession start with "GO:". ||

----

|| *    Code*: || 1121 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate Boolean (0/1) format. ||
|| *   Cause*: || Boolean (0/1)  ||

----

|| *    Code*: || 1122 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate spectra reference format.||
|| *   Cause*: || The reference must be in the format ms_file[1-n] :{SPECTRA_REF}. Multiple spectra MUST be referenced using a '|' delimited list.||

----

|| *    Code*: || 1123 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate ColUnit format.||
|| *   Cause*: || Defines the used unit for a column in the protein/peptide/small_molecule section. The define label format like {UNIT_ID}-colunit-{protein/peptide/small_molecule}. The value label format like {column name}={Parameter defining the unit}. {Parameter defining the unit} is Param format.||

----

|| *    Code*: || 1124 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a validate CHEMMODs accession format. ||
|| *   Cause*: || CHEMMODS have the format CHEMMOD:+/-{chemical formula or m/z delta}. Valid CHEMMODS are for example "CHEMMOD:+NH4" or "CHEMMOD:-10.1098". Mass deltas MUST NOT be used for CHEMMODs if the delta can be expressed through a known chemical formula .||

----

|| *    Code*: || 1125 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" value "{1}" is not a validate UnitID format.||
|| *   Cause*: || UNIT_IDs SHOULD consist of the resource identifier plus the resources internal unit id.  UNIT_IDs MUST only contain the following characters: 'A'-'Z', 'a'-'z', '0'-'9', and '_'.||

----

|| *    Code*: || 1126 ||
|| *   Level*: || Warn ||
|| *Original*: || "{0}" value "{1}" in the "{2}" table is not a validate parameter list format.||
|| *   Cause*: || A "|" delimited list of search engine score(s), Scores SHOULD be reported using CV parameters whenever possible.||

----
== Logical Type ==
|| *    Code*: || 2000  ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" is a empty cell, or current column can not use "null".   ||
|| *   Cause*: || In the table-based sections (protein, peptide, and small molecule) there MUST NOT be any empty cells. In case a given property is not available "null" MUST be used. Notice: some properties not allow "null" value, for example unit_id, accession and so on. This is, for example, the case when modifications were not identified on a given peptide (i.e. the table cell MUST NOT be empty but "null" has to be reported).||

----

|| *    Code*: || 2001 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" field value "{1}" not allow "null" value.||
|| *   Cause*: || Some kind of field value can not allow "null" or empty value. For example accession, unitId and so on.||

----

|| *    Code*: || 2100  ||
|| *   Level*: || Error ||
|| *Original*: || current line belong to "{0}" section, can not display here. ||
|| *   Cause*: || mzTab line including four mainly sections: metadata, protein, peptide, small molecule. Every section in an mzTab file MUST only occur once if present. Therefore, proteins, for example, from multiple UNITs (i.e. experiments) MUST be reported in the same protein section / table. If the Peptide and Protein Section are present, the information MUST be consistent between both sections. The line order like following: metadata lines should be display first, then the protein header, protein; peptide header, peptide, small molecule header, small molecule.||

----

|| *    Code*: || 2101  ||
|| *   Level*: || Error ||
|| *Original*: || header line "{0}" only occur once!   ||
|| *   Cause*: || Each table based section (protein, peptide, small molecule) MUST start with the corresponding header line. These header lines MUST only occur once in the document since each section also MUST only occur once.||

----

|| *    Code*: || 2102 ||
|| *   Level*: || Error ||
|| *Original*: || current line "{0}" is data line, according header line not defined yet.||
|| *   Cause*: || Each table based section (protein, peptide, small molecule) MUST start with the corresponding header line. These header lines MUST only occur once in the document since each section also MUST only occur once.||

----

|| *    Code*: || 2103 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" duplicate with the previous lines.||
|| *   Cause*: || Duplication MUST be prevented when merging mzTab files. ||

----

|| *    Code*: || 2104
|| *   Level*: || Error ||
|| *Original*: || The unitId "{0}" not exists in the metadata. ||
|| *   Cause*: || The unitId not exists in the metadata. During validate ColUnit columns, data in the protein/peptide/small_molecular table, the unit should be defined in the metadata.||

----

|| *    Code*: || 2105 ||
|| *   Level*: || Warn ||
|| *Original*: || ColUnit "{0}" column name "{1}" can not find in section stable column.   ||
|| *   Cause*: || Defines the used unit for a column in the protein/peptide/small_molecule section. The define label format like {UNIT_ID}-colunit-{protein/peptide/small_molecule}. The value label format like {column name}={Parameter defining the unit}. If {column name} can not found in the section stable columns, report warn message.||

----

|| *    Code*: || 2106  ||
|| *   Level*: || Warn ||
|| *Original*: || Column "{0}" value in the peptide table "{1}" not found in the protein table.||
|| *   Cause*: || Peptide accession MAY display in the protein table.||

----

|| *    Code*: || 2107  ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" duplicate in the unit "{2}" ||
|| *   Cause*: || A protein accession MUST be unique within one UNIT. Together with the UNIT_ID the accession creates a unique identifier within a given mzTab file.||

----

|| *    Code*: || 2108  ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" should between 0 and 1.||
|| *   Cause*: || A value between 0 and 1 defining the protein coverage ||

----

|| *    Code*: || 2109 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" defined multiple member are numbered should be 1..n  ||
|| *   Cause*: || In mztab, multiple members are numbered 1..n, for example: Multiple instruments are numbered PRIDE_1234-instrument[1], PRIDE_1234-instrument[2] ||

----

|| *    Code*: || 2110 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" include modification "{1}", its position not between 0 and size + 1.  ||
|| *   Cause*: || Terminal modifications MUST be reported at position 0 or protein size + 1 respectively. ||

----

|| *    Code*: || 2111 ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" can not used here. ||
|| *   Cause*: || For proteins and peptides modifications SHOULD be reported using either UNIMOD or PSI-MOD accessions. As these two ontologies are not applicable to small molecules, so-called CHEMMODs can also be defined. CHEMMODs MUST NOT be used if the modification can be reported using a PSI-MOD or UNIMOD accession.  Mass deltas MUST NOT be used for CHEMMODs if the delta can be expressed through a known chemical formula.||

----

|| *    Code*: || 2112  ||
|| *   Level*: || Error ||
|| *Original*: || Column "{0}" value "{1}" is not a amino acid sequence. ||
|| *   Cause*: || It is possible to report substitutions of amino acids using SUBST:{amino acid}. In these cases, the "sequence" column MUST contain the original, unaltered sequence.||

----

|| *    Code*: || 2113 ||
|| *   Level*: || Error ||
|| *Original*: || Optional CV param column "{0}" need data type "{1}, but "{2}" data not match.||
|| *   Cause*: || check cv param optional column definition matched to data type. For example: opt_cv_MS:1001905_emPAI_value, MS:1001905 definition	The emPAI value of protein abundance, produced from the emPAI algorithm, and value-type:xsd:double.||

----

|| *    Code*: || 2114  ||
|| *   Level*: || Error ||
|| *Original*: || "{0}" column value "{1}" sub id number not defined in the metadata. ||
|| *   Cause*: || Abundance column sub[id] number should be defined in the metadata. ||

----

|| *    Code*: || 2115 ||
|| *   Level*: || Error ||
|| *Original*: || "{0}", "{1}", "{2}" column sub id number not same. ||
|| *   Cause*: || Abundance, Abundance_stdev, Abundance_std_error should have same sub[id] number.  ||

----

|| *    Code*: || 2116  ||
|| *   Level*: || Warn ||
|| *Original*: || software parameter "{0}" not contain version information. ||
|| *   Cause*: || The parameter's value SHOULD contain the software's version. The order (numbering) should reflect the order in which the tools were used.||

----
== !CrossCheck Type ==

|| *    Code*: || 3000 ||
|| *   Level*: || Warn ||
|| *Original*: || The column "{0}" value "{1}" should be identified the NCBI entry's name. ||
|| *   Cause*: || The human readable species the protein was identified in (this should be the NCBI entry's name)  ||

----

|| *    Code*: || 3001 ||
|| *   Level*: || Warn ||
|| *Original*: || The column "{0}" value "{1}" should be assigned by Miriam. ||
|| *   Cause*: || Wherever possible the Miriam (http://www.ebi.ac.uk/miriam) assigned name SHOULD be used. ||

----

|| *    Code*: || 3002  ||
|| *   Level*: || Warn ||
|| *Original*: || The column "{0}" value "{1}" should obey a molecules structure of SMILES. ||
|| *   Cause*: || The molecules structure in the simplified molecular-input line-entry system (SMILES). ||

----

|| *    Code*: || 3003 ||
|| *   Level*: || Warn ||
|| *Original*: || The column "{0}" value "{1}" should obey the standard InChI key.||
|| *   Cause*: || The standard IUPAC International Chemical Identifier (InChI) Key of the given substance. ||

----

|| *    Code*: || 3004 ||
|| *   Level*: || Warn ||
|| *Original*: || The column "{0}" value "{1}" should be a validate MS CV Parameter.||
|| *   Cause*: || by call web service of OLS to validate MS CV Parameter data type. ||

