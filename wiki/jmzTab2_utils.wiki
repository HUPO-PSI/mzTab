#summary One-sentence summary of this page.

<wiki:toc max_depth="2" />

----
= Introduction =

We create two interfaces, CLI (MZTabCommandLine) and Simple GUI (MZTabInspector), to simplify the usage of jmzTab APIs. Compared with GUI, command line provides more flexible way to batch process the mzTab files.

== Command Line Interface ==

  * print command line help
{{{
java -jar MZTabCommandLine.jar -help
}}}
The output will like following: 
{{{
usage: jmztab
 -check <inFile>             Choose a file from input directory. This
                             parameter should not be null!
 -convert <inFile, format>   Converts the given format file to an mztab
                             file.
 -h,--help                   print help message
 -inDir <arg>                Setting input file directory. If not set,
                             default input directory is current
                             application path.
 -message <code>             print Error/Warn detail message based on code
                             number.
 -outDir <arg>               Setting output file directory. If not set,
                             default output  directory is same with input
                             directory.
 -outFile <arg>              Record error/warn messages into outfile. If
                             not set, print message on the screen.
}}}


  * print special error/warn message based on code, see details of [jmzTab2_message Error/Warn Message List].
{{{
java -jar MZTabCommandLine.jar -message code=2000
}}}
The output will like:
{{{
    Code:       2000
Category:       Logical
Original:       Column "{0}" is an empty cell, or the current column cannot use "null".
   Cause:       In the table-based sections (protein, peptide, psm, and small molecule) there MUST NOT be any empty cells. Missing values MUST be reported using "null".
}}}
    # *    Code:* Unique number for error/warn
    # *Category:* Currently, there are three types of messages: _*Format, Logical, CrossCheck*_
    # *Original:* Message expression pattern. "{?}" is a couple of parameters which can be filled during validate processing.
    # *   Cause:* A readable text to describe the reason why raise this error/warn. Currently, these cause message coming from mztab specification mainly.



  * Exists warn/error messages during validate, print messages on screen:
{{{
java -Xms2048m -jar MZTabCommandLine.jar -inDir temp -check inFile=SILAC_CQI.mzTab
}}}

The output like:
{{{
Begin check mztab file: c:\work\jmztab2\target\jmztab\testset\mztab_merged_example.txt
[Warn-2018] line 13: Software parameter "[MS, MS:1001583, MaxQuant,]" does not contain version information.
[Warn-2001] line 36: Column "search_engine_score_ms_run[6]" field value does not allow a "null" value.
Finish!
}}}


  * Exists warn/error messages during validate, print messages into SILAC_CQI.err file:
{{{
java -Xms2048m -jar MZTabCommandLine.jar -inDir temp -check inFile=SILAC_CQI.mzTab -outFile SILAC_CQI.err
}}}


  * Convert PRIDE_Exp_Complete_Ac_16649.xml, and print mzTab file to screen:
{{{
java -Xms2048m -jar MZTabCommandLine.jar -inDir temp -convert inFile=PRIDE_Exp_Complete_Ac_16649.xml format=PRIDE
}}}

  * Convert PRIDE_Exp_Complete_Ac_16649.xml, and print mzTab file to PRIDE_Exp_Complete_Ac_16649_xml.mztab:
{{{
java -Xms2048m -jar MZTabCommandLine.jar -inDir temp -convert inFile=PRIDE_Exp_Complete_Ac_16649.xml format=PRIDE -outFile PRIDE_Exp_Complete_Ac_16649_xml.mztab
}}}


----
== Simple GUI ==
There are some screenshots about how to use GUI (Click on a screenshot to see the full size version):
<table>
<tr>
<td>[https://code.google.com/p/mztab/source/browse/wiki/images/validate.JPG https://code.google.com/p/mztab/source/browse/wiki/images/validate.JPG]</td>
<td>[https://code.google.com/p/mztab/source/browse/wiki/images/convert.JPG https://code.google.com/p/mztab/source/browse/wiki/images/convert.JPG]</td>
</tr>
</table>