#summary One-sentence summary of this page.

<wiki:toc max_depth="2" />

----
= Introduction =

We create two interfaces, CLI (MZTabCommandLine) and Simple GUI (MZTabInspector), to simplify the usage of jmzTab APIs. Compared with GUI, command line provides more flexible way to batch process the mzTab files.

= Command Line Interface =
----
== Get Help ==
  * print command line help
{{{
java -jar jmztab-2.0.jar -help
}}}
The output will like following: 
{{{
usage: jmztab
 -check <inFile>             Choose a file from input directory. This
                             parameter should not be null!
 -convert <inFile, format>   Converts the given format file to an mztab
                             file.
 -h,--help                   print help message
 -inDir <arg>                Setting input file directory. If not set,
                             default input directory is current
                             application path.
 -merge <inFiles, combine>   Merge multiple comma-delimited mztab files
                             into one File.
 -message <code>             print Error/Warn detail message based on code
                             number.
 -outDir <arg>               Setting output file directory. If not set,
                             default output  directory is same with input
                             directory.
 -outFile <arg>              Record error/warn messages into outfile. If
                             not set, print message on the screen.
}}}
  * print special error/warn message based on code, see details of [jmzTab2_message Error/Warn Message List].
{{{
java -jar jmztab-2.0.jar -message code=2000
}}}
The output will like:
{{{
    Code:	2000
Category:	Logical
Original:	Column "{0}" is a empty cell, or current column can not use "null".
   Cause:	In the table-based sections (protein, peptide, and small molecule) there MUST NOT be any empty cells. In case a given property is not available "null" MUST be used. Notice: some properties not allow "null" value, for example unit_id, accession and so on. This is, for example, the case when modifications were not identified on a given peptide (i.e. the table cell MUST NOT be empty but "null" has to be reported).
}}}
    # *    Code:* Unique number for error/warn
    # *Category:* Currently, there are three types of messages: _*Format, Logical, CrossCheck*_
    # *Original:* Message expression pattern. "{?}" is a couple of parameters which can be filled during validate processing.
    # *   Cause:* A readable text to describe the reason why raise this error/warn. Currently, these cause message coming from mztab specification mainly.
----
== Validate Operation ==
  * no warn/error messages report during validate CPTAC_Progenesis_label_free_mzq.txt
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -check inFile=CPTAC_Progenesis_label_free_mzq.txt

# The output like:
Begin check mztab file: c:\work\jmztab2\target\jmztab\testset\CPTAC_Progenesis_label_free_mzq.txt
not errors in testset\CPTAC_Progenesis_label_free_mzq.txt file!
Finish!
}}}
  * Exists warn/error messages during validate, print messages on screen:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -check inFile=mztab_merged_example.txt

# The output like:
Begin check mztab file: c:\work\jmztab2\target\jmztab\testset\mztab_merged_example.txt
[Warn-2106] line 42: Column "accession" value in the peptide table "IPI00010779" not found in the protein table.
[Warn-2106] line 43: Column "accession" value in the peptide table "IPI00513698" not found in the protein table.
[Warn-2106] line 47: Column "accession" value in the peptide table "IPI00010779" not found in the protein table.
Finish!
}}}
  * Exists warn/error messages during validate, print messages on mztab_merged_example.err file:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -check inFile=mztab_merged_example.txt outDir testset -outFile mztab_merged_example.err
}}}
----
== Convert Operation ==
  * Convert PRIDE_Exp_Complete_Ac_16649.xml, and print mzTab file to screen:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -convert inFile=PRIDE_Exp_Complete_Ac_16649.xml format=PRIDE
}}}
  * Convert PRIDE_Exp_Complete_Ac_16649.xml, and print mzTab file to PRIDE_Exp_Complete_Ac_16649_xml.mztab:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -convert inFile=PRIDE_Exp_Complete_Ac_16649.xml format=PRIDE -outFile PRIDE_Exp_Complete_Ac_16649_xml.mztab
}}}
----
== Merge Operation ==
  * Merge multiple mzTabFile into one mzTabFile, print result to screen:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -merge inFiles=CPTAC_Progenesis_label_free_mzq.txt,mztab_itraq_example.txt
}}}
  * Merge multiple mzTabFile into one mzTabFile, merge same subsample columns, print result to screen:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -merge inFiles=CPTAC_Progenesis_label_free_mzq.txt,mztab_itraq_example.txt combine=true
}}}
  * merge multiple mzTabFile into one mzTabFile, save result into combine_CPTAC_Progenesis_label_free_mzq.txt:
{{{
java -Xms2048m -jar jmztab-2.0.jar -inDir testset -merge inFiles=CPTAC_Progenesis_label_free_mzq.txt,mztab_itraq_example.txt -outDir testset -outFile combine_CPTAC_Progenesis_label_free_mzq.txt
}}}
----
= Simple GUI =
There are some screenshots about how to use GUI (Click on a screenshot to see the full size version):
<table>
<tr>
<td>[https://code.google.com/p/mztab/source/browse/wiki/images/validate.JPG https://code.google.com/p/mztab/source/browse/wiki/images/validate.JPG]</td>
<td>[https://code.google.com/p/mztab/source/browse/wiki/images/convert.JPG https://code.google.com/p/mztab/source/browse/wiki/images/convert.JPG]</td>
<td>[https://code.google.com/p/mztab/source/browse/wiki/images/merge.JPG https://code.google.com/p/mztab/source/browse/wiki/images/merge.JPG]</td>
</tr>
</table>