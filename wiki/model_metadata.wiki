#summary One-sentence summary of this page.

= Introduction =

Add your content here.


= Demos =

== Create a common Unit ==
  * Create a unit object and set and set human readable title, description. 
{{{
Unit unit = new Unit("PRIDE_1234");

# MTD	PRIDE_1234-title	mzTab iTRAQ test
# MTD	PRIDE_1234-description	This is a PRIDE test.
unit.setTitle("mzTab iTRAQ test");
unit.setDescription("This is a PRIDE test.");
}}}
  * A list of parameters describing a sample processing step. The order of the data_processing items should reflect the order these processing steps were performed in. If multiple parameters are given for a step these should be separated by a “|”.
{{{
# MTD	PRIDE_1234-sample_processing[1]	[SEP, SEP:00173, SDS PAGE, ]
# MTD	PRIDE_1234-sample_processing[2]	[SEP, SEP:00142, enzyme digestion, ]|[MS, MS:1001251, Trypsin, ]

SplitList<Param> sampleProcessing1 = new SplitList<Param>(BAR);
sampleProcessing1.add(new CVParam("SEP", "SEP:00173", "SDS PAGE", null));
SplitList<Param> sampleProcessing2 = new SplitList<Param>(BAR);
sampleProcessing2.add(new CVParam("SEP", "SEP:00142", "enzyme digestion", null));
sampleProcessing2.add(new CVParam("MS", "MS:1001251", "Trypsin", null));
unit.addSampleProcessing(1, sampleProcessing1);
unit.addSampleProcessing(2, sampleProcessing2);
}}}

  * The instrument used in the experiment. Multiple instruments are numbered 1..n
{{{
# MTD	PRIDE_1234-instrument[1]-name	[MS, MS:100049, LTQ Orbitrap, ]
# MTD	PRIDE_1234-instrument[1]-analyzer	[MS, MS:1000291, linear ion trap, ]
# MTD	PRIDE_1234-instrument[2]-source	[MS, MS:1000598, ETD, ]
# MTD	PRIDE_1234-instrument[3]-detector	[MS, MS:1000253, electron multiplier, ]
unit.addInstrumentName(1, new CVParam("MS", "MS:100049", "LTQ Orbitrap", null));
unit.addInstrumentSource(2, new CVParam("MS", "MS:1000598", "ETD", null));
unit.addInstrumentAnalyzer(1, new CVParam("MS", "MS:1000291", "linear ion trap", null));
unit.addInstrumentDetector(3, new CVParam("MS", "MS:1000253", "electron multiplier", null));
}}}

  * Software used to analyze the data and obtain the results reported. 
{{{
# MTD	PRIDE_1234-software[1]	[MS, MS:1001207, Mascot, 2.3]
# MTD	PRIDE_1234-software[2]-setting	Fragment tolerance = 0.1Da
# MTD	PRIDE_1234-software[2]-setting	Parent tolerance = 0.5Da
unit.addSoftwareParam(1, new CVParam("MS", "MS:1001207", "Mascot", "2.3"));
unit.addSoftwareSetting(2, "Fragment tolerance = 0.1Da");
unit.addSoftwareSetting(2, "Parent tolerance = 0.5Da");
}}}

  * The unit’s false discovery rate(s) reported at the peptide and/or protein level. Multiple parameters MUST be separated by “|”.
{{{
# MTD	PRIDE_1234-false_discovery_rate	[MS, MS:1234, pep-fdr, 0.5]|[MS, MS:1001364, pep:global FDR, 0.01]|[MS, MS:1001214, pep:global FDR, 0.08]
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1234", "pep-fdr", "0.5"));
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1001364", "pep:global FDR", "0.01"));
unit.addFalseDiscoveryRateParam(new CVParam("MS", "MS:1001214", "pep:global FDR", "0.08"));
}}}

  * A publication on this unit. PubMed ids must be prefixed by “pubmed:”, DOIs by “doi:”. Multiple identifiers MUST be separated by “|”.
{{{
# MTD	PRIDE_1234-publication	pubmed:21063943|doi:10.1007/978-1-60761-987-1_6
# MTD	PRIDE_1234-publication	pubmed:20615486|doi:10.1016/j.jprot.2010.06.008
Publication p1 = new Publication();
p1.addPublication(Publication.Type.PUBMED, "21063943");
p1.addPublication(Publication.Type.DOI, "10.1007/978-1-60761-987-1_6");
Publication p2 = new Publication();
p2.addPublication(Publication.Type.PUBMED, "20615486");
p2.addPublication(Publication.Type.DOI, "10.1016/j.jprot.2010.06.008");
unit.addPublication(p1);
unit.addPublication(p2);
}}}

  * The contact's name, affiliation, and email.
{{{
# MTD	PRIDE_1234-contact[1]-name	James D. Watson
# MTD	PRIDE_1234-contact[1]-affiliation	Cambridge University, UK
# MTD	PRIDE_1234-contact[1]-email	watson@cam.ac.uk
# MTD	PRIDE_1234-contact[2]-affiliation	Cambridge University, UK
# MTD	PRIDE_1234-contact[2]-email	crick@cam.ac.uk
unit.addContactName(1, "James D. Watson");
unit.addContactAffiliation(1, "Cambridge University, UK");
unit.addContactAffiliation(2, "Cambridge University, UK");
unit.addContactEmail(1, "watson@cam.ac.uk");
unit.addContactEmail(2, "crick@cam.ac.uk");
}}}

  * A URI pointing to the unit's source data 
{{{
# MTD	PRIDE_1234-uri	http://www.ebi.ac.uk/pride/url/to/experiment
# MTD	PRIDE_1234-uri	http://proteomecentral.proteomexchange.org/cgi/GetDataset
unit.addUri(new URI("http://www.ebi.ac.uk/pride/url/to/experiment"));
unit.addUri(new URI("http://proteomecentral.proteomexchange.org/cgi/GetDataset"));
}}}

  * A list of “|” separated parameters describing all (distinct) PTMs reported in this unit.
{{{
# MTD	PRIDE_1234-mod	[MOD, MOD:00397, iodoacetamide derivatized residue, ]|[MOD, MOD:00675, oxidized residue, ]
unit.addModParam(new CVParam("MOD", "MOD:00397", "iodoacetamide derivatized residue", null));
unit.addModParam(new CVParam("MOD", "MOD:00675", "oxidized residue", null));
}}}

  * The quantification method used in this unit (most of the times experiment)
{{{
# MTD	PRIDE_1234-quantification_method	[MS, MS:1001837, iTraq, ]
unit.setQuantificationMethod(new CVParam("MS", "MS:1001837", "iTraq", null));
}}}

  * Defines what type of units is reported in the protein/peptide/small _molecule quantification fields.
{{{
# MTD	PRIDE_1234-protein-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
# MTD	PRIDE_1234-peptide-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
# MTD	PRIDE_1234-small_molecule-quantification_unit	[PRIDE, PRIDE:0000395, Ratio, ]
unit.setProteinQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
unit.setPeptideQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
unit.setSmallMoleculeQuantificationUnit(new CVParam("PRIDE", "PRIDE:0000395", "Ratio", null));
}}}

  * The external MS data file.
{{{
# MTD	PRIDE_1234-ms_file[1]-format	[MS, MS:1000584, mzML file, ]
# MTD	PRIDE_1234-ms_file[2]-location	file://C:/path/to/my/file
# MTD	PRIDE_1234-ms_file[2]-id_format	[MS, MS:1000774, multiple peak list, nativeID format]
# MTD	PRIDE_1234-ms_file[3]-location	ftp://ftp.ebi.ac.uk/path/to/file
unit.addMsFileFormat(1, new CVParam("MS", "MS:1000584", "mzML file", null));
unit.addMsFileLocation(2, new URL("file://C:\\path\\to\\my\\file"));
unit.addMsFileLocation(3, new URL("ftp://ftp.ebi.ac.uk/path/to/file"));
unit.addMsFileIdFormat(2, new CVParam("MS", "MS:1000774", "multiple peak list", "nativeID format"));
}}}

  * Defines the used unit of protein/peptide/small_molecule section
{{{
# refer a peptide header retention_time column 
MZTabColumnFactory peptideFactory = MZTabColumnFactory.getInstance(Section.Peptide);
PeptideColumn peptideColumn = (PeptideColumn) peptideFactory.getColumn("retention_time");
# MTD	PRIDE_1234-colunit-peptide	retention_time=[UO, UO:0000031, minute, ]
unit.addPeptideColUnit(peptideColumn, new CVParam("UO", "UO:0000031", "minute", null));

# refer protein header section reliability column directly
# MTD	PRIDE_1234-colunit-protein	reliability=[MS, MS:00001231, PeptideProphet:Score, ]
unit.addProteinColUnit(ProteinColumn.RELIABILITY, new CVParam("MS", "MS:00001231", "PeptideProphet:Score", null));

# refer small molecule header section reliability column directory
# MTD	PRIDE_1234-colunit-small_molecule	retention_time=[UO, UO:0000031, minute, ]
unit.addSmallMoleculeColUnit(SmallMoleculeColumn.RETENTION_TIME, new CVParam("UO", "UO:0000031", "minute", null));
}}}

  * Any additional parameters describing the unit.
{{{
# MTD	PRIDE_1234-custom	[, , MS operator, Florian]
unit.addCustom(new UserParam("MS operator", "Florian"));
}}}